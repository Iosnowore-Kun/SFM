///====== Copyright © 1996-2009, Valve Corporation, All rights reserved. =======
//
// Purpose: Paint game definition file (.fgd) 
//
///=============================================================================

@include "ep2.fgd"
@include "portal2.fgd"


///=============================================================================
//
// Logical Entities
//
///=============================================================================



//@PointClass base(Weapon,Targetname, Parentname) studio("models/weapons/w_portalgun.mdl") = weapon_paintgun : "Paintgun"
//[
	//CanFirePortal1(boolean)			: "Can Fire Portal 1" : 1 : "Can this portalgun create blue portals?"
	//CanFirePortal2(boolean)			: "Can Fire Portal 2" : 1 : "Can this portalgun create red portals?"

	//input ChargePortal1(void)		: "Does charge up effect for mounted portalgun."
	//input ChargePortal2(void)		: "Does charge up effect for mounted portalgun."

	//input FirePortal1(void)			: "Projects portal 1 onto a wall in the facing direction of the gun."
	//input FirePortal2(void)			: "Projects portal 2 onto a wall in the facing direction of the gun."

	//input FirePortalDirection1(vector)	: "Fires portal 1 in the specified direction."
	//input FirePortalDirection2(vector)	: "Fires portal 1 in the specified direction."

	//output OnFiredPortal1(void)		: "Fires when the first (blue) portal is fired."
	//output OnFiredPortal2(void)		: "Fires when the second (red) portal is fired."
//]

///=============================================================================
//
// Brush Entities
//
///=============================================================================

@SolidClass base(Trigger, Targetname) = trigger_temp_painted_surface :
	"A trigger volume which is a temporary stand-in for painted surfaces,"+
	"until the paint tech is implemented."
[
	// Paint Power Type
	PaintPowerType(choices) : "Paint Power Type" : 3 :
	"The paint power the player will get when he touches the volume."=
	[
		0 : "Bounce"
		1 : "Stick"
		2 : "Speed"
		3 : "None (default)"
	]
]


///=============================================================================
//
// Model Entities
//
///=============================================================================

@PointClass base(Weapon) studio("models/weapons/w_portalgun.mdl") = weapon_paintgun : "Paintgun" []

@PointClass base(Targetname, Angles, Studiomodel) studio( "models/props/security_camera.mdl" ) = npc_cleaner_bot : "Cleaner Bot"
[
	spawnflags(Flags) = 
	[
		32 : "Autostart" : 1
	]	

	// Inputs
	input Enable(void) : "If closed, open."
	input Disable(void) : "If open, close."
	input Toggle(void) : "Toggle - If open, close. If closed, open."
	input Ragdoll(void) : "Disable and fall off the wall."

	// Outputs
	output OnDeploy(void) : "Camera is becoming active and dangerous."
	output OnRetire(void) : "Camera is becoming inactive and harmless."
]

@PointClass base(Item) studio("models/items/healthkit.mdl") = item_paint_power_pickup : "Paint Ammo"
[
	// Paint power pickup
	PaintType(choices) : "Paint Type" : 0 :
	"The paint power of the pickup." =
	[
		0 : "Bounce"
		1 : "Stick"
		2 : "Speed"
	]
]

@SolidClass base(Trigger, Targetname) = trigger_paint_cleanser : 
	"A trigger volume that fizzles paint powers from the gun when the player touches it."
[
]

@PointClass base(Targetname,Angles) studio("models/weapons/AR2_grenade.mdl") = paintgun_blob : "Paint Blob"
[
	// Paint power pickup
	blob_power(choices) : "Blob Power" : 3 :
	"The paint power of the blob." =
	[
		0 : "Bounce"
		1 : "Stick"
		2 : "Speed"
		3 : "Erase"
	]
]

@PointClass base(Targetname,Angles) studio( "models/props/metal_box.mdl" ) = prop_weighted_cube : "Weighted Cube"
[
	skin(choices) : "Cube Type" : 0 =
	[
		0 : "Standard"
		1 : "Companion"
		2 : "Reflective"
		3 : "Sphere"
	]

	PaintPower(choices) : "Paint Power" : 3 :
	"The paint power of the pickup." =
	[
		0 : "Bounce"
		1 : "Stick"
		2 : "Speed"
		3 : "None"
	]

	input  Dissolve(void) : "Dissolves the cube."
	output OnFizzled(void) : "Fired when a cube is fizzled."
]

@PointClass base(Targetname, Angles) studio("models/editor/cone_helper.mdl") = info_paint_sprayer : "An entity that sprays paint."
[
	//Paint sprayer
	start_active(boolean) : "Start Active?" : 0
	PaintType(choices) : "Paint Type" : 0 :
	"The type of paint sprayed." = 
	[
		0 : "Bounce"
		1 : "Stick"
		2 : "Speed"
		3 : "Erase"
	]
	blobs_per_second(float) : "Blobs per second" : "1" : "The number of paint blobs sprayed per second."
	min_speed(float) : "Min blob speed" : "100" : "The minimum speed of the sprayed blobs."
	max_speed(float) : "Max blob speed" : "100" : "The maximum speed of the sprayed blobs."
	blob_spread_radius(float) : "Blob spread radius" : "0" : "The starting radius of the spread of the blobs."
	blob_spread_angle(float) : "Blob spread angle" : "0" : "The spread of the blobs along its direction vector (in degrees)."
	start_radius_min(float): "Blob starting radius min" : "0.5" : "The minimum starting radius of the sprayed blobs."
	start_radius_max(float): "Blob starting radius max" : "0.5" : "The maximum starting radius of the sprayed blobs."
	end_radius_min(float): "Blob ending radius min" : "0.7" : "The minimum ending radius of the sprayed blobs."
	end_radius_max(float): "Blob ending radius max" : "0.7" : "The maximum ending radius of the sprayed blobs."
	radius_grow_time_min(float): "Blob radius grow time min" : "1.0" : "The minimum time taken for the radius of the sprayed blobs to grow from starting radius to ending radius."
	radius_grow_time_max(float): "Blob radius grow time max" : "1.0" : "The maximum time taken for the radius of the sprayed blobs to grow from starting radius to ending radius."

	input Start(void) : "Tell the paint sprayer to start spraying."
	input Stop(void) : "Tell the paint sprayer to stop spraying."
	input ChangePaintType(integer) : "Change the type of paint being sprayed."
]

@PointClass base(BasePropPhysics) studio("models/props/futbol.mdl") = prop_paint_bomb : "Paint bomb that explodes on impact."
[
	//Paint bomb
	PaintType(choices) : "Paint Type" : 3 :
	"The type of paint to explode." = 
	[
		0 : "Bounce"
		1 : "Stick"
		2 : "Speed"
		3 : "Erase"
	]
]
