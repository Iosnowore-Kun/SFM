//-------------------------------------------------------------------------
//
// Game data for DOTA!
//
//-------------------------------------------------------------------------

@include "halflife2.fgd"

@gridnav(64, 32, 32, 3500)

@PointClass base(Targetname) = ent_dota_game_events : 
	"An entity that fires outputs based on game events."
[
	// Outputs
	output OnDayStarted(void) : "Fired when the day starts."
	output OnNightStarted(void) : "Fired when the night starts."
]


@PointClass base(Targetname) = npc_dota_roshan_spawner: 
	"An entity that spawns Roshan."
[
]	

@PointClass base(Targetname) sphere(inner_radius) sphere(outer_radius) = ent_dota_lightinfo: 
	"An entity that controls the global light."
[
	color_day(color255) : "Color - Day" : "0 0 0" : "Daytime color."
	color_dusk(color255) : "Color - Dusk" : "0 0 0" : "Dusk color."
	color_night(color255) : "Color - Night" : "0 0 0" : "Nighttime color."
	color_dawn(color255) : "Color - Dawn" : "0 0 0" : "Dawn color."
	ambient_color_day(color255) : "Ambient Color - Day" : "0 0 0" : "Ambient Daytime color."
	ambient_color_dusk(color255) : "Ambient Color - Dusk" : "0 0 0" : "Ambient Dusk color."
	ambient_color_night(color255) : "Ambient Color - Night" : "0 0 0" : "Ambient Nighttime color."
	ambient_color_dawn(color255) : "Ambient Color - Dawn" : "0 0 0" : "Ambient Dawn color."
	ambient_scale_day(float) : "Ambient Scale - Day" : "0" : "Ambient Daytime scale."
	ambient_scale_dusk(float) : "Ambient Scale - Dusk" : "0" : "Ambient Dusk scale."
	ambient_scale_night(float) : "Ambient Scale - Night" : "0" : "Ambient Nighttime scale."
	ambient_scale_dawn(float) : "Ambient Scale - Dawn" : "0" : "Ambient Dawn scale."
	shadow_color_day(color255) : "Shadow Color - Day" : "0 0 0" : "Shadow Daytime color."
	shadow_color_dusk(color255) : "Shadow Color - Dusk" : "0 0 0" : "Shadow Dusk color."
	shadow_color_night(color255) : "Shadow Color - Night" : "0 0 0" : "Shadow Nighttime color."
	shadow_color_dawn(color255) : "Shadow Color - Dawn" : "0 0 0" : "Shadow Dawn color."
	shadow_scale_day(float) : "Shadow Scale - Day" : "0" : "Shadow Daytime scale."
	shadow_scale_dusk(float) : "Shadow Scale - Dusk" : "0" : "Shadow Dusk scale."
	shadow_scale_night(float) : "Shadow Scale - Night" : "0" : "Shadow Nighttime scale."
	shadow_scale_dawn(float) : "Shadow Scale - Dawn" : "0" : "Shadow Dawn scale."
	shadow_ground_scale_day(float) : "Shadow Ground Scale - Day" : "0" : "Shadow Daytime ground scale."
	shadow_ground_scale_dusk(float) : "Shadow Ground Scale - Dusk" : "0" : "Shadow Dusk ground scale."
	shadow_ground_scale_night(float) : "Shadow Ground Scale - Night" : "0" : "Shadow Nighttime ground scale."
	shadow_ground_scale_dawn(float) : "Shadow Ground Scale - Dawn" : "0" : "Shadow Dawn ground scale."
	specular_color_day(color255) : "Specular Color - Day" : "0 0 0" : "Specular Daytime color."
	specular_color_dusk(color255) : "Specular Color - Dusk" : "0 0 0" : "Specular Dusk color."
	specular_color_night(color255) : "Specular Color - Night" : "0 0 0" : "Specular Nighttime color."
	specular_color_dawn(color255) : "Specular Color - Dawn" : "0 0 0" : "Specular Dawn color."
	light_direction_day(vector) : "Light Direction - Day" : "0 0 0" : "Light Daytime direction."
	light_direction_dawn(vector) : "Light Direction - Dusk" : "0 0 0" : "Light Dusk direction."
	light_direction_night(vector) : "Light Direction - Night" : "0 0 0" : "Light Nighttime direction."
	light_direction_dusk(vector) : "Light Direction - Dawn" : "0 0 0" : "Light Dawn direction."
	ambient_direction_day(vector) : "Ambient Direction - Day" : "0 0 0" : "Ambient Daytime direction."
	ambient_direction_dawn(vector) : "Ambient Direction - Dusk" : "0 0 0" : "Ambient Dusk direction."
	ambient_direction_night(vector) : "Ambient Direction - Night" : "0 0 0" : "Ambient Nighttime direction."
	ambient_direction_dusk(vector) : "Ambient Direction - Dawn" : "0 0 0" : "Ambient Dawn direction."
	fog_color_day(color255) : "Fog Color - Day" : "0 0 0" : "Fog Daytime color."
	fog_color_dusk(color255) : "Fog Color - Dusk" : "0 0 0" : "Fog Dusk color."
	fog_color_night(color255) : "Fog Color - Night" : "0 0 0" : "Fog Nighttime color."
	fog_color_dawn(color255) : "Fog Color - Dawn" : "0 0 0" : "Fog Dawn color."
	fog_start_day(float) : "Fog Start - Day" : "0" : "Daytime Fog Start distance."
	fog_start_dusk(float) : "Fog Start - Dusk" : "0" : "Dusk Fog Start distance."
	fog_start_night(float) : "Fog Start - Night" : "0" : "Night Fog Start distance."
	fog_start_dawn(float) : "Fog Start - Dawn" : "0" : "Dawn Fog Start distance."
	fog_end_day(float) : "Fog End - Day" : "0" : "Daytime Fog Start distance."
	fog_end_dusk(float) : "Fog End - Dusk" : "0" : "Dusk Fog End distance."
	fog_end_night(float) : "Fog End - Night" : "0" : "Night Fog End distance."
	fog_end_dawn(float) : "Fog End - Dawn" : "0" : "Dawn Fog End distance."

	inner_radius(float) : "Inner Radius" : "0" : "Radius inside which the global light is exactly the specified color."
	outer_radius(float) : "Outer Radius" : "0" : "Radius inside which the global light is partially the specified color."
]	

@PointClass base(Targetname) = npc_dota_neutral_spawner: 
	"An entity that spawns neutrals."
[
	NeutralType(choices) :"Camp Type" : 0 =
	[
		0: "Easy"
		1: "Moderate"
		2: "Hard"
		3: "Ancient"
	]
]

@PointClass base(Targetname) = npc_dota_spawner_good_top: 
	"An entity that spawns NPCs based on scripts."
[
	NPCScriptName(string) : "NPC Script" : "" : "Name of the NPC script used to spawn this character."
	NPCUniqueName(string) : "Unique NPC Name" : "" : "Name of the NPC."
	NPCFirstWaypoint(string) : "First Waypoint" : "" : "First Waypoint the creeps will head to" 
	input	SpawnNPCFromScript(integer) : "Spawn X npcs from the script."
]

@PointClass base(Targetname) = npc_dota_spawner_good_mid: 
	"An entity that spawns NPCs based on scripts."
[
	NPCScriptName(string) : "NPC Script" : "" : "Name of the NPC script used to spawn this character."
	NPCUniqueName(string) : "Unique NPC Name" : "" : "Name of the NPC."
	NPCFirstWaypoint(string) : "First Waypoint" : "" : "First Waypoint the creeps will head to" 
	input	SpawnNPCFromScript(integer) : "Spawn X npcs from the script."
]

@PointClass base(Targetname) = npc_dota_spawner_good_bot: 
	"An entity that spawns NPCs based on scripts."
[
	NPCScriptName(string) : "NPC Script" : "" : "Name of the NPC script used to spawn this character."
	NPCUniqueName(string) : "Unique NPC Name" : "" : "Name of the NPC."
	NPCFirstWaypoint(string) : "First Waypoint" : "" : "First Waypoint the creeps will head to" 
	input	SpawnNPCFromScript(integer) : "Spawn X npcs from the script."
]

@PointClass base(Targetname) = npc_dota_spawner_bad_top: 
	"An entity that spawns NPCs based on scripts."
[
	NPCScriptName(string) : "NPC Script" : "" : "Name of the NPC script used to spawn this character."
	NPCUniqueName(string) : "Unique NPC Name" : "" : "Name of the NPC."
	NPCFirstWaypoint(string) : "First Waypoint" : "" : "First Waypoint the creeps will head to" 
	input	SpawnNPCFromScript(integer) : "Spawn X npcs from the script."
]

@PointClass base(Targetname) = npc_dota_spawner_bad_mid: 
	"An entity that spawns NPCs based on scripts."
[
	NPCScriptName(string) : "NPC Script" : "" : "Name of the NPC script used to spawn this character."
	NPCUniqueName(string) : "Unique NPC Name" : "" : "Name of the NPC."
	NPCFirstWaypoint(string) : "First Waypoint" : "" : "First Waypoint the creeps will head to" 
	input	SpawnNPCFromScript(integer) : "Spawn X npcs from the script."
]

@PointClass base(Targetname) = npc_dota_spawner_bad_bot: 
	"An entity that spawns NPCs based on scripts."
[
	NPCScriptName(string) : "NPC Script" : "" : "Name of the NPC script used to spawn this character."
	NPCUniqueName(string) : "Unique NPC Name" : "" : "Name of the NPC."
	NPCFirstWaypoint(string) : "First Waypoint" : "" : "First Waypoint the creeps will head to" 
	input	SpawnNPCFromScript(integer) : "Spawn X npcs from the script."
]




@PointClass base(Targetname) = npc_dota_spawner: 
	"An entity that spawns NPCs based on scripts."
[
	NPCScriptName(string) : "NPC Script" : "" : "Name of the NPC script used to spawn this character."
	NPCUniqueName(string) : "Unique NPC Name" : "" : "Name of the NPC."
	NPCFirstWaypoint(string) : "First Waypoint" : "" : "First Waypoint the creeps will head to" 
	input	SpawnNPCFromScript(integer) : "Spawn X npcs from the script."
]

@PointClass base(Targetname) = dota_item_rune_spawner :
	"A marker for where runes spawn."
[

]

@PointClass base(PlayerClass, Angles) studio("models/editor/playerstart.mdl") = info_player_start_goodguys :
	"	"
[

]

@PointClass base(PlayerClass, Angles) studio("models/editor/playerstart.mdl") = info_player_start_badguys :
	"	"
[

]

@PointClass base(Targetname) occluder(radius) color(255 0 0) = env_occluder : 
	"A test entity for radius occluding for the Fog of War system."
[
	radius(float) : "Radius" : 128 : "The radius around this occluder."
]

@PointClass base(Targetname) line_occluder(radius) color(255 0 0) = env_line_occluder : 
	"A test entity for line occluding for the Fog of War system."
[
	radius(float) : "Radius" : 128 : "The radius around this occluder."
]


@PointClass base(Targetname) viewer(radius) color(0 255 0) = env_viewer : 
	"A test entity for viewing for the Fog of War system."
[
	radius(float) : "Radius" : 256 : "The radius around this viewer."
]

@PointClass base(Angles, Studiomodel) studio() = ent_dota_tree :
	"	"
[

]

@PointClass base(prop_dynamic_base, Targetname) studioprop() = ent_dota_fountain: 
	"The Fountain"
[
	teamnumber(choices) :"Team Number" : 0 =
	[
		2: "Good Guys"
		3: "Bad Guys"
	]
]
@PointClass base(prop_dynamic_base, Targetname) studioprop() = npc_dota_fort: 
	"The Fort"
[
	teamnumber(choices) :"Team Number" : 0 =
	[
		2: "Good Guys"
		3: "Bad Guys"
	]
]
@PointClass base(prop_dynamic_base, Targetname) studioprop() = npc_dota_barracks: 
	"A Barracks"
[
	teamnumber(choices) :"Team Number" : 0 =
	[
		2: "Good Guys"
		3: "Bad Guys"
	]
	upgrade_level(choices) :"Upgrade Category" : 0 =
	[
		0: "UPGRADED_NONE"
		1: "UPGRADED_BAD_BOTTOM_MELEE"
		2: "UPGRADED_BAD_BOTTOM_RANGE"
		4: "UPGRADED_BAD_MID_MELEE"
		8: "UPGRADED_BAD_MID_RANGE"
		16: "UPGRADED_BAD_TOP_MELEE"
	 	32: "UPGRADED_BAD_TOP_RANGE"
	 	64: "UPGRADED_GOOD_BOTTOM_MELEE"
		128: "UPGRADED_GOOD_BOTTOM_RANGE"
		256: "UPGRADED_GOOD_MID_MELEE"
		512: "UPGRADED_GOOD_MID_RANGE"
		1024: "UPGRADED_GOOD_TOP_MELEE"
	 	2048: "UPGRADED_GOOD_TOP_RANGE"
	]
]

@BaseClass = dota_building
[ 
	link(string) : "Linked" : " " : "The Linked Unit."	
	 
	vulnerableoncreepspawn(choices) :"Vulnerable On Creep Spawn" : 0 =
	[
		0: "No"
		1: "Yes"
	]	

	invuln_count(integer):"Invulnerability Link Count" : 0 : "The number of entities linked to this to trigger to remove invulnerability."
	teamnumber(choices) :"Team Number" : 0 =
	[
		2: "Good Guys"
		3: "Bad Guys"
	]
]


@PointClass base(prop_dynamic_base, Targetname, dota_building) studioprop() = npc_dota_tower: 
	"A Tower"
[
]
@PointClass base(prop_dynamic_base, Targetname, dota_building) studioprop() = npc_dota_building: 
	"A Building"
[
]

@PointClass base(prop_dynamic_base, Targetname, dota_building) studioprop() = npc_dota_fort: 
	"The Fort Ancient"
[
]

@PointClass base(prop_dynamic_base, Targetname) studioprop() = ent_dota_shop: 
	"An item shop"
[
	shoptype(choices) :"Shop Type" : 0 =
	[
		0: "Home"
		1: "Side"
		2: "Secret"
	]
]

@PointClass base(Targetname, EnableDisable) sphere(minfalloff) sphere(maxfalloff) iconsprite("editor/color_correction.vmt") = dota_color_correction : 
	"An entity to control the color correction in the map."
[
	minfalloff(float) : "Min Radius" : "200.0"   : "This is the distance at which this color correction is in 100% control"
	maxfalloff(float) : "Max Radius"   : "400.0" : "This is the distance where this color correction starts taking effect."
	filename(string)  : "Lookup Table Filename"			: ""	  : "This is the lookup table filename"
]
